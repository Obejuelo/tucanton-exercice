{"version":3,"sources":["components/FormDrop.js","util/config.js","components/TableUsers.js","pages/Home.js","pages/Equipo.js","components/Navbar.js","pages/Usuario.js","pages/Cliente.js","components/App.js","serviceWorker.js","index.js"],"names":["FormDrop","_ref","equipos","getClients","_useState","useState","_useState2","Object","slicedToArray","equipo","setEquipo","_useState3","_useState4","users","setUsers","_useState5","_useState6","user","setUser","equipoRef","React","createRef","userRef","useEffect","getUsers","fetch","concat","then","res","json","data","react_default","a","createElement","className","htmlFor","ref","onChange","valueEquipo","current","value","map","index","key","nombre","id","TableUsers","clients","scope","client","idx","usuarioId","email","Home","setEquipos","setClients","getEquipos","arguments","length","undefined","Equipo","idRef","nameRef","onSubmit","e","preventDefault","body","method","JSON","stringify","headers","Accept","Content-Type","toConsumableArray","type","required","placeholder","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","react_router_dom","to","Usuario","equipoId","setEquipoId","Cliente","emailRef","usuarioRef","setClient","item","App","react_router","render","location","TransitionGroup","CSSTransition","timeout","classNames","exact","path","component","Boolean","window","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce0fb0b8.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {url} from '../util/config';\r\n\r\nexport default function({equipos, getClients}) {\r\n    const [equipo, setEquipo] = useState('Selecciona')\r\n    const [users, setUsers] = useState([])\r\n    const [user, setUser] = useState('')\r\n\r\n    const equipoRef = new React.createRef()\r\n    const userRef = new React.createRef()\r\n\r\n    useEffect(()=>{\r\n        getUsers()\r\n    },[equipo])\r\n\r\n    const getUsers = () => {\r\n        fetch(`${url}/usuario/${equipo}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUsers(data)\r\n                // console.log(data)\r\n            })\r\n    }\r\n\r\n    const _changeEquipo = () => {\r\n        const valueEquipo = equipoRef.current.value;\r\n        setEquipo(valueEquipo)\r\n    }\r\n\r\n    const _changeUser = () => {\r\n        setUser(userRef.current.value)\r\n        getClients(userRef.current.value)\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                    <label htmlFor=\"inputState\">Equipo</label>\r\n                    <select \r\n                        ref={equipoRef}\r\n                        className=\"form-control\" \r\n                        onChange={_changeEquipo} \r\n                        value={equipo}>\r\n                            <option>Selecciona</option>\r\n                        {equipos.map((equipo, index) => (\r\n                            <option key={index}>{equipo.nombre}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                    <label htmlFor=\"inputState\">Usuario</label>\r\n                    <select \r\n                        className=\"form-control\"\r\n                        onChange={_changeUser}\r\n                        ref={userRef}\r\n                        value={user}>\r\n                        <option>Selecciona</option>\r\n                        {users.map((user, index) => (\r\n                            <option key={index}>{user.id}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}","export const url = ''","import React from 'react'\r\n\r\nexport default function({clients}) {\r\n    return(\r\n        <table className=\"table table-hover table-dark table-sm table-responsive-sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Usuario</th>\r\n                    <th scope=\"col\">Correo</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {clients.map((client, idx) => (\r\n                    <tr key={idx}>\r\n                        <th scope=\"row\">{idx+1}</th>\r\n                        <td>{client.usuarioId}</td>\r\n                        <td>{client.email}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport FormDrop from '../components/FormDrop';\r\nimport TableUsers from '../components/TableUsers';\r\nimport {url} from '../util/config';\r\n\r\nexport default function() {\r\n    const [equipos, setEquipos] = useState([])\r\n    const [clients, setClients] = useState([])\r\n    // const [usuarios, setUsuarios] = useState([])\r\n\r\n    useEffect(()=>{\r\n        getEquipos()\r\n        getClients()\r\n    },[])\r\n\r\n    const getEquipos = () => {\r\n        fetch(`${url}/equipo`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setEquipos(data)\r\n                // console.log(data);\r\n            })\r\n    }\r\n\r\n    const getClients = (client='') => {\r\n        fetch(`${url}/cliente/${client}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setClients(data)\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className='page'>\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Inicio</h2>\r\n                <hr className='mb-4'/>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12\">\r\n                        <FormDrop equipos={equipos} getClients={getClients}/>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        {clients.length !== 0 ? <TableUsers clients={clients}/> : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {url} from '../util/config';\r\n\r\nexport default function() {\r\n    const [equipos, setEquipo] = useState([])\r\n    let idRef = new React.createRef()\r\n    let nameRef = new React.createRef()\r\n\r\n    useEffect(()=>{\r\n        fetch(`${url}/equipo`)\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                setEquipo(data)\r\n            })\r\n    },[])\r\n\r\n    const _addEquipo = (e) => {\r\n        e.preventDefault()\r\n\r\n        const id  = idRef.current.value\r\n        const nombre  = nameRef.current.value\r\n        const body = {id, nombre}\r\n\r\n        fetch(`${url}/equipo`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setEquipo([...equipos, data])\r\n            // console.log(data);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className='page'>\r\n            <h2 className=\"text-center\">Equipo</h2>\r\n            <hr className='mb-4'/>\r\n            <div className=\"row mt-3 justify-content-center\">\r\n                <div className=\"col-md-4\">\r\n                    <form className='form' onSubmit={_addEquipo}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"id\">Id</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                ref={idRef}\r\n                                required\r\n                                placeholder='id' \r\n                                className='form-control'/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombre\">Nombre</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                ref={nameRef}\r\n                                required\r\n                                placeholder='Nombre' \r\n                                className='form-control'/>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-dark\">Agregar</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-5\">\r\n                    <table className=\"table table-hover table-dark table-sm table-responsive-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Nombre</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {equipos.map((equipo, idx) => (\r\n                                <tr key={idx}>\r\n                                    <th scope=\"row\">{idx+1}</th>\r\n                                    <td>{equipo.id}</td>\r\n                                    <td>{equipo.nombre}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function() {\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg bg-dark container navbar-dark\">\r\n            <div className='toolbar'>\r\n                <h3 className='text-white'>Tucanton</h3>\r\n            </div>\r\n\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link to='/' className=\"nav-link\" >Inicio</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to='/equipo' className=\"nav-link\" >Equipo</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to='/usuario' className=\"nav-link\" >Usuario</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to='/cliente' className=\"nav-link\" >Cliente</Link>\r\n                </li>\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {url} from '../util/config';\r\n\r\nexport default function() {\r\n    const idRef = new React.createRef()\r\n    const nameRef = new React.createRef()\r\n    const equipoRef = new React.createRef()\r\n\r\n    const [equipoId, setEquipoId] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const [equipo, setEquipo] = useState('')\r\n\r\n    useEffect(()=>{\r\n        fetch(`${url}/equipo`)\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                setEquipoId(data)\r\n            })\r\n        fetch(`${url}/usuario`)\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                setUsers(data)\r\n            })\r\n    },[])\r\n\r\n    const _addUser = (e) => {\r\n        e.preventDefault()\r\n        const id = idRef.current.value\r\n        const nombre = nameRef.current.value\r\n\r\n        let body = {id, nombre, equipoId:equipo}\r\n\r\n        fetch(`${url}/usuario`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data => {\r\n            setUsers([...users, data])\r\n        })\r\n    }\r\n\r\n    const _changeValueEquipo = () => {\r\n        const equipoId = equipoRef.current.value\r\n        setEquipo(equipoId)\r\n    }\r\n\r\n    return(\r\n        <div className='page'>\r\n            <h2 className=\"text-center\">Usuario</h2>\r\n            <hr className='mb-4'/>\r\n            <div className=\"row mt-3 justify-content-center\">\r\n                <div className=\"col-md-4\">\r\n                    <form className='form' onSubmit={_addUser}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"id\">Id</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                ref={idRef}\r\n                                required\r\n                                placeholder='id' \r\n                                className='form-control'/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombre\">Nombre</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                ref={nameRef}\r\n                                required\r\n                                placeholder='Nombre' \r\n                                className='form-control'/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombre\">Equipo id</label>\r\n                            <select \r\n                                id=\"equipo\"\r\n                                ref={equipoRef}\r\n                                onChange={_changeValueEquipo}\r\n                                value={equipo}\r\n                                className='form-control'>\r\n                                    <option>seleccionar</option>\r\n                                    {equipoId.map((equipo, idx) => (\r\n                                        <option key={idx}>{equipo.nombre}</option>\r\n                                    ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-dark\">Agregar</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-5\">\r\n                    <table className=\"table table-hover table-dark table-sm table-responsive-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Nombre</th>\r\n                                <th scope=\"col\">Equipo id</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.map((user, idx) => (\r\n                                <tr key={idx}>\r\n                                    <th scope=\"row\">{idx+1}</th>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.nombre}</td>\r\n                                    <td>{user.equipoId}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {url} from '../util/config';\r\n\r\nexport default function() {\r\n    const idRef = new React.createRef()\r\n    const emailRef = new React.createRef()\r\n    const usuarioRef = new React.createRef()\r\n\r\n    const [user, setUser] = useState('')\r\n    const [users, setUsers] = useState([])\r\n    const [client, setClient] = useState([])\r\n\r\n    useEffect(()=>{\r\n        fetch(`${url}/cliente`)\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                setClient(data)\r\n            })\r\n        fetch(`${url}/usuario`)\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                setUsers(data)\r\n            })\r\n    },[])\r\n\r\n    const _addClient = (e) => {\r\n        e.preventDefault()\r\n        const id = idRef.current.value\r\n        const email = emailRef.current.value\r\n\r\n        let body = {id, email, usuarioId:user}\r\n\r\n       fetch(`${url}/cliente`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data => {\r\n            setClient([...client, data])\r\n        })\r\n    }\r\n\r\n    const _changeValueUser = () => {\r\n        setUser(usuarioRef.current.value)\r\n    }\r\n\r\n    return(\r\n        <div className='page'>\r\n            <h2 className=\"text-center\">Cliente</h2>\r\n            <hr className='mb-4'/>\r\n            <div className=\"row mt-3 justify-content-center\">\r\n                <div className=\"col-md-4\">\r\n                    <form className='form' onSubmit={_addClient}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Id</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                ref={idRef}\r\n                                required\r\n                                placeholder='id' \r\n                                className='form-control'/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombre\">Email</label>\r\n                            <input \r\n                                type=\"email\"\r\n                                ref={emailRef}\r\n                                required\r\n                                placeholder='Email' \r\n                                className='form-control'/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombre\">Equipo id</label>\r\n                            <select \r\n                                id=\"equipo\"\r\n                                ref={usuarioRef}\r\n                                onChange={_changeValueUser}\r\n                                value={user}\r\n                                className='form-control'>\r\n                                    <option>Seleccionar</option>\r\n                                    {users.map((user, idx) => (\r\n                                        <option key={idx}>{user.id}</option>\r\n                                    ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-dark\">Agregar</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-5\">\r\n                    <table className=\"table table-hover table-dark table-sm table-responsive-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Usuario id</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {client.map((item, idx) => (\r\n                                <tr key={idx}>\r\n                                    <th scope=\"row\">{idx+1}</th>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.usuarioId}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport Home from '../pages/Home';\nimport Equipo from '../pages/Equipo';\nimport {Route, Switch} from 'react-router-dom';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\nimport Navbar from './Navbar';\nimport Usuario from '../pages/Usuario';\nimport Cliente from '../pages/Cliente';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"bg-dark\">\n        <Navbar/>\n      </div>\n      <Route render={({location}) => (\n        <TransitionGroup>\n          <CSSTransition\n\t\t\t\t\t\t\tkey={location.key}\n\t\t\t\t\t\t\ttimeout={300}\n\t\t\t\t\t\t\tclassNames=\"fade\">\n\n            {/* Routes and pages */}\n            <Switch location={location}>\n              <Route exact path='/' component={Home}/>\n              <Route path='/equipo' component={Equipo}/>\n              <Route path='/usuario' component={Usuario}/>\n              <Route path='/cliente' component={Cliente}/>\n            </Switch>\n\n          </CSSTransition>\n        </TransitionGroup>\n      )}>\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}